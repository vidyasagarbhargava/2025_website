---
image: https://img.freepik.com/free-vector/hand-drawn-business-communication-illustration_23-2149158973.jpg?t=st=1730270512~exp=1730274112~hmac=88b58f863df6ebd036ceab2e6893a1abe5f8190545d76e7a2564cdb8ca749892&w=2000
about:
  template: marquee
comments: false
execute:
  echo: false
jupyter: python3
---
::: {.column-page}

:::
 <h1 align="center">Real World Data Science</h1>



```{python}
import altair as alt
import pandas as pd
import numpy as np

np.random.seed(42)
columns = ["A", "B", "C"]
source = pd.DataFrame(
    np.cumsum(np.random.randn(100, 3), 0).round(2),
    columns=columns, index=pd.RangeIndex(100, name="x")
)
source = source.reset_index().melt("x", var_name="category", value_name="y")

# Create a selection that chooses the nearest point & selects based on x-value
nearest = alt.selection_point(nearest=True, on="pointerover",
                              fields=["x"], empty=False)

# The basic line
line = alt.Chart(source).mark_line(interpolate="basis").encode(
    x="x:Q",
    y="y:Q",
    color="category:N"
)

# Transparent selectors across the chart. This is what tells us
# the x-value of the cursor
selectors = alt.Chart(source).mark_point().encode(
    x="x:Q",
    opacity=alt.value(0),
).add_params(
    nearest
)

# Draw points on the line, and highlight based on selection
points = line.mark_point().encode(
    opacity=alt.condition(nearest, alt.value(1), alt.value(0))
)

# Draw text labels near the points, and highlight based on selection
text = line.mark_text(align="left", dx=5, dy=-5).encode(
    text=alt.condition(nearest, "y:Q", alt.value(" "))
)

# Draw a rule at the location of the selection
rules = alt.Chart(source).mark_rule(color="gray").encode(
    x="x:Q",
).transform_filter(
    nearest
)

# Put the five layers into a chart and bind the data
alt.layer(
    line, selectors, points, rules, text
).properties(
    width=600, height=500
)
```








<!-- <style>
  
</style>
<div class="card-container">

<div class="card">
  <img src="https://t4.ftcdn.net/jpg/03/62/48/17/360_F_362481762_WYOXzZBC8J63iIu26IeoxXlo7hhIa47w.jpg" alt="Avatar">
  <div class="container">
  <h4><b>Machine Learning</b></h4> 
  </div>
</div>



<div class="card">
  <img src="https://t4.ftcdn.net/jpg/03/62/48/17/360_F_362481762_WYOXzZBC8J63iIu26IeoxXlo7hhIa47w.jpg" alt="Avatar">
  <div class="container">
  <h4><b>Statistics</b></h4> 
  </div>
</div>

<div class="card">
  <img src="https://t4.ftcdn.net/jpg/03/62/48/17/360_F_362481762_WYOXzZBC8J63iIu26IeoxXlo7hhIa47w.jpg" alt="Avatar">
  <div class="container">
  <h4><b>Deep Learning</b></h4> 
  </div>
</div>

<div class="card">
  <img src="https://t4.ftcdn.net/jpg/03/62/48/17/360_F_362481762_WYOXzZBC8J63iIu26IeoxXlo7hhIa47w.jpg" alt="Avatar">
  <div class="container">
  <h4><b>Generative AI</b></h4> 
  </div>
</div>
<div class="card">
  <img src="https://t4.ftcdn.net/jpg/03/62/48/17/360_F_362481762_WYOXzZBC8J63iIu26IeoxXlo7hhIa47w.jpg" alt="Avatar">
  <div class="container">
  <h4><b>Natural Language Processing</b></h4> 
  </div>
</div>
<div class="card">
  <img src="https://t4.ftcdn.net/jpg/03/62/48/17/360_F_362481762_WYOXzZBC8J63iIu26IeoxXlo7hhIa47w.jpg" alt="Avatar">
  <div class="container">
  <h4><b>Computer Vision</b></h4> 
  </div>
</div>
</div>  -->



